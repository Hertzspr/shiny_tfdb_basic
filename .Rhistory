library(leaflet)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
vbs <- list(
value_box(
title = "Arrivals Count",
value = textOutput("arrivals_count")
),
value_box(
title = "Departures Count",
value = textOutput("departures_count")
),
value_box(
title = "Total Arrivals Fee",
value = textOutput("arrivals_sumfee")
),
value_box(
title = "Total Departures Fee",
value = textOutput("departures_sumfee")
)
)
library(scale)
x <- 5000000000
paste(scale(x = x,scale = x/1000000, suffix = "M"))
View(transfers_df)
View(transfers_df)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
)builtin_themes {bslib}
builtin_themes {bslib}
builtin_themes
builtin_themes()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("bslib")
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
fs::dir_tree()
readRDS("transfers_df.RDS")
sample(readRDS("transfers_df.RDS"),size = 100)
sample(readRDS("transfers_df.RDS"),size = 0.1)
sample(readRDS("transfers_df.RDS"),size = 0.2)
x <- readRDS("transfers_df.RDS")
sample(x,size = 0.2)
sample(x,size = 100)
sample(x,size = 100,replace = T)
sample(x,size = 10,replace = T)
sample(x,size = 10,replace = T) %>% View()
sample(x,size = 10,replace = T) |> View()
sample(x, size = 0.1) |> View()
sample(x,size = 10) |> View()
sample(x,prob = 0.1) |> View()
sample(x,prob = 0.5) |> View()
dplyr::slice_sample(.data = x,n = 10)
asx <- dplyr::slice_sample(.data = x,n = 20)
View(asx)
saveRDS(object = asx,file = "asx.RDS")
y <- readRDS(file = "df_long_lat.RDS")
asY <- dplyr::slice_sample(.data = x, n = 5)
View(asY)
asy <- dplyr::slice_sample(.data = y, n = 5)
View(asy)
saveRDS(object = asy,file = "asy.RDS")
shiny::runApp()
View(transfers_df)
transgers_df %>% filter(season==2016) %>% select(team_name) %>% unique()
transfers_df %>% filter(season==2016) %>% select(team_name) %>% unique()
transgers_df %>% filter(season==2015) %>% select(team_name) %>% unique()
transfers_df %>% filter(season==2015) %>% select(team_name) %>% unique()
transfers_df %>% select(club_2) %>% unique()
transfers_df %>% select(club_2) %>% unique() %>% arrange()
transfers_df %>% select(club_2) %>% arrange(club_2) %>% unique()
transfers_df %>% filter(club_2 %in% c("Barcelona", "Barcelona SC")) %>% view()
install.packages("googledrive")
shiny::runApp()
<<<<<<< HEAD
shiny::runApp()
runApp()
shiny::runApp()
renv::init()
renv::snapshot()
=======
>>>>>>> parent of 1011375 (Integrating renv() for reproducibility)
shiny::runApp()
runApp()
runApp()
runApp()
transfers_df %>%
filter(season %in% c(input$season_year)) %>%
filter(transfer_type %in% c("Arrivals", "Departures")) %>%
filter(is_loan %in% stat_loan()) %>%
group_by(season, is_loan) %>%
mutate(sumtf = sum(transfer_fee)) %>% view()
transfers_df %>%
filter(season== 2015) %>%
filter(transfer_type %in% c("Arrivals", "Departures")) %>%
group_by(season, is_loan) %>%
mutate(sumtf = sum(transfer_fee))
transfers_df %>%
+     filter(season== 2015) %>%
+     filter(transfer_type %in% c("Arrivals", "Departures")) %>%
+         group_by(season, is_loan) %>%
+     mutate(sumtf = sum(transfer_fee)) %>% view()
transfers_df %>%
+     filter(season == 2015) %>%
+     filter(transfer_type %in% c("Arrivals", "Departures")) %>%
+         group_by(season, is_loan) %>%
+     mutate(sumtf = sum(transfer_fee)) %>% view()
runApp()
transfers_df %>% view()
transfers_df %>% filter(season == 2021) %>% view()
transfers_df %>% filter(season == 2021) %>% team_name() %>% pull() %>% unique()
transfers_df %>% filter(season == 2021) %>% pull(team_name) %>% unique()
transfers_df %>% filter(season == 2020) %>% pull(team_name) %>% unique()
transfers_df %>% filter(season == 2022) %>% pull(team_name) %>% unique()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
transfers_df$season %>% unique()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ggplot() +
annotate("text", x = 0.5, y = 0.5, label = "No data available", size = 6, hjust = 0.5) +
theme_void()
library(ggplot2)
ggplot() +
annotate("text", x = 0.5, y = 0.5, label = "No data available", size = 6, hjust = 0.5) +
theme_void()
shiny::runApp()
runApp()
